<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
        http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.20.xsd">

    <!-- ChangeSet 1: Create users table -->
    <changeSet id="1-create-users" author="JunjieLi">
        <comment>Create users table with all constraints</comment>
        <sql>
            CREATE TABLE users (
                id BIGINT AUTO_INCREMENT PRIMARY KEY,
                email VARCHAR(100) NOT NULL UNIQUE,
                password VARCHAR(255) NOT NULL,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL
            );
        </sql>
        <rollback>
            DROP TABLE users;
        </rollback>
    </changeSet>

    <!-- ChangeSet 2: Create tasks table with indexes and foreign keys -->
    <changeSet id="2-create-tasks" author="JunjieLi">
        <comment>Create tasks table with all indexes and foreign keys</comment>
        <sql>
            CREATE TABLE tasks (
                id BIGINT AUTO_INCREMENT PRIMARY KEY,
                task_id VARCHAR(36) NOT NULL UNIQUE,
                user_id BIGINT NOT NULL,
                ticker VARCHAR(20) NOT NULL,
                analysis_date DATE NOT NULL,
                selected_analysts TEXT COMMENT 'JSON array of selected analysts',
                research_depth INT DEFAULT 1,
                status VARCHAR(20) DEFAULT 'PENDING',
                final_decision VARCHAR(50),
                error_message TEXT,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
                completed_at TIMESTAMP NULL,
                INDEX idx_tasks_user_id (user_id),
                INDEX idx_tasks_task_id (task_id),
                INDEX idx_tasks_status (status),
                CONSTRAINT fk_tasks_user_id
                    FOREIGN KEY (user_id) REFERENCES users(id)
                    ON DELETE CASCADE
            );
        </sql>
        <rollback>
            DROP TABLE tasks;
        </rollback>
    </changeSet>

    <!-- ChangeSet 3: Create reports table with indexes and foreign keys -->
    <changeSet id="3-create-reports" author="JunjieLi">
        <comment>Create reports table with all indexes and foreign keys</comment>
        <sql>
            CREATE TABLE reports (
                id BIGINT AUTO_INCREMENT PRIMARY KEY,
                task_id BIGINT NOT NULL,
                report_type VARCHAR(50) NOT NULL,
                content TEXT,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
                INDEX idx_reports_task_id (task_id),
                CONSTRAINT fk_reports_task_id
                    FOREIGN KEY (task_id) REFERENCES tasks(id)
                    ON DELETE CASCADE
            );
        </sql>
        <rollback>
            DROP TABLE reports;
        </rollback>
    </changeSet>

    <!-- ChangeSet 4: Create task_messages table with indexes and foreign keys -->
    <changeSet id="4-create-task-messages" author="JunjieLi">
        <comment>Create task_messages table with all indexes and foreign keys</comment>
        <sql>
            CREATE TABLE task_messages (
                id BIGINT AUTO_INCREMENT PRIMARY KEY,
                task_id BIGINT NOT NULL,
                message_type VARCHAR(20) NOT NULL,
                content JSON NOT NULL,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
                INDEX idx_task_messages_task_time (task_id, created_at),
                CONSTRAINT fk_task_messages_task_id
                    FOREIGN KEY (task_id) REFERENCES tasks(id)
                    ON DELETE CASCADE
            );
        </sql>
        <rollback>
            DROP TABLE task_messages;
        </rollback>
    </changeSet>

</databaseChangeLog>
